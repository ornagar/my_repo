/**
 * 
 */
package il.co.ilrd;
/**
 * @author xyz
 *
 */
public class Complex {
	private double m_real;
	private double m_imag;
	private boolean m_positive;
	private char m_sign;
	
	public Complex() {
		m_real = 0.0;
		m_imag = 0.0;
		m_positive = true;
	}
	
	public Complex(double real, double imag) {
		m_real = real;
		m_imag = imag;
		m_positive = (imag >= 0) ? true : false;
	}
	
	public Complex add(Complex other) {
		m_real += other.m_real;
		m_imag += other.m_imag;
		m_positive = m_imag >= 0 ? true : false;
		return this;
	}
	
	public String toString() {
		if (m_positive) {
			return "" + m_real + " + " + java.lang.Math.abs(m_imag) + 'i';
		} else {
			return "" + m_real + " - " + java.lang.Math.abs(m_imag) + 'i';
		}	 
	}
	
	@Override
	public boolean equals(Object o) {
		if (o == this) return true;
        if (!(o instanceof Complex)) {
            return false;
        }
        Complex c = (Complex) o;
        return m_real == c.m_real &&
                m_imag == c.m_imag &&
                m_positive == c.m_positive;
	}
	
	@Override
    public int hashCode() {
        return java.util.Objects.hash(m_real, m_imag, m_positive);
    }
}
